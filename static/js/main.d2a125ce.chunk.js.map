{"version":3,"sources":["Akkordeon.jsx","Thema.jsx","Streifen.jsx","Drawer.jsx","Kompass.jsx","reportWebVitals.js","index.js"],"names":["Akkordeon","props","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","titel","AccordionDetails","inhalt","Thema","title","img","descr","acordeones","refs","defaultProps","CircularProgress","color","Titel","Inhalt","this","Streifen","thema","active","state","open","handleClickOpen","setState","handleClose","console","log","Card","variant","raised","CardActionArea","CardMedia","component","image","process","CardContent","Typography","gutterBottom","map","acordeon","CardActions","motion","div","whileHover","scale","Button","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","e","action","React","Component","NavDrawer","useState","setOpen","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","Drawer","anchor","Divider","buttonNamen","element","ID","Kompass","serverAdress","globalOriginX","globalOriginY","rotStrCoeff","rotations_array","aktiverStreifen","daten","rotID","tema","rotation","z","activo","UNSAFE_componentWillMount","a","axios","get","serverResponse","neueDaten","rotationen","x","push","length","i","data","Beschreibung","Acordeon","Refs","error","alert","m","rotID_target","workCopy","rotCoeff","zDifCoeff","aktStr","currentz","j","nameArray","n","Grid","container","spacing","item","xs","animate","zIndex","makeTitels","clickHandler","rotate","originX","originY","handleSwitchButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qbAQe,SAASA,EAAUC,GAC9B,OACI,qBAAKC,UAAU,YAAf,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,WAAc,cAAC,IAAD,IACdC,gBAAgB,kBAChBC,GAAK,iBAHT,SAKI,4BAAIN,EAAMO,UAEd,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,UACKR,EAAMS,gB,aClBVC,EASjB,WAAYC,EAAOC,EAAKC,EAAOC,EAAYC,GAAM,yBARjDC,aAAe,CACXL,MAAO,cAACM,EAAA,EAAD,CAAkBC,MAAM,cAC/BN,IAAK,mBACLC,MAAO,cAACI,EAAA,EAAD,CAAkBC,MAAM,cAC/BJ,WAAY,CAAC,CAACK,MAAO,aAAcC,OAAQ,eAC3CL,KAAM,6BAIEM,KAAKV,MAAbA,GAA0CU,KAAKL,aAAaL,MACtDU,KAAKT,IAAXA,GAAkCS,KAAKL,aAAaJ,IAC5CS,KAAKR,MAAbA,GAA0CQ,KAAKL,aAAaH,MAC/CQ,KAAKP,WAAlBA,GAA8DO,KAAKL,aAAaF,WACzEO,KAAKN,KAAZA,GAAsCM,KAAKL,aAAaD,MCK3CO,E,kDAsBnB,WAAYtB,GAAO,IAAD,8BAChB,gBAtBFgB,aAAe,CACbO,MAAO,IAAIb,EACXc,QAAQ,GAmBQ,EAhBlBC,MAAQ,CACNC,MAAM,GAeU,EAZlBC,gBAAkB,WAChB,EAAKC,SAAS,CACZF,MAAM,KAUQ,EANlBG,YAAc,WACZ,EAAKD,SAAS,CACZF,MAAM,KAMR1B,EAAMuB,MAAQ,EAAKA,MAAQvB,EAAMuB,MAAQ,EAAKA,MAAQ,EAAKP,aAAaO,MACxEvB,EAAMwB,OAAS,EAAKA,OAASxB,EAAMwB,OAAS,EAAKA,OAAO,EAAKR,aAAaQ,OAC1EM,QAAQC,IAAI,iBACZD,QAAQC,IAAI,UAAU/B,EAAMwB,QALZ,E,0CAQlB,WAAS,IAAD,OACN,OAAGH,KAAKrB,MAAMwB,OAEV,qBAAKvB,UAAU,WAAf,SACA,eAAC+B,EAAA,EAAD,CAAM/B,UAAU,gBAAgBgC,QAAQ,YAAYC,OAAS,OAA7D,UACI,qBAAKjC,UAAU,eAAf,SACE,eAACkC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACAC,UAAY,MACVC,MAASC,eAAuBlB,KAAKE,MAAMX,IAC3CD,MAAQ,cAEV,eAAC6B,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAYR,QAAQ,KAAKS,cAAY,EAACL,UAAU,SAAhD,SACWhB,KAAKrB,MAAMuB,MAAMZ,QAEpB,cAAC8B,EAAA,EAAD,CAAYR,QAAQ,QAApB,SACE,cAAC,IAAD,UACGZ,KAAKrB,MAAMuB,MAAMV,UAItB,8BAAMQ,KAAKrB,MAAMuB,MAAMT,WAAW6B,KAAI,SAAAC,GAAQ,OAC5C,cAAC7C,EAAD,CACEQ,MAAQqC,EAASzB,MACjBV,OAAQmC,EAASxB,sBAOjC,eAACyB,EAAA,EAAD,WACE,cAACC,EAAA,EAAOC,IAAR,CACEC,WAAc,CAACC,MAAO,KADxB,SAEI,cAACC,EAAA,EAAD,CAAQC,QAAW9B,KAAKM,gBAAiBM,QAAQ,YAAYf,MAAM,UAAnE,8BAEJ,eAACkC,EAAA,EAAD,CACE1B,KAAML,KAAKI,MAAMC,KACjB2B,QAAShC,KAAKQ,YACdyB,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,EAAA,EAAD,CAAalD,GAAG,qBAAhB,oDAGA,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBpD,GAAG,2BAAtB,SACGe,KAAKrB,MAAMuB,MAAMR,SAGtB,cAAC4C,EAAA,EAAD,UACE,cAACT,EAAA,EAAD,CAAQC,QAAW9B,KAAKQ,YAAaX,MAAQ,UAA7C,+BAKJ,cAAC4B,EAAA,EAAOC,IAAR,CACEC,WAAa,CAACC,MAAO,KADvB,SAGI,cAACC,EAAA,EAAD,CAAQjB,QAAQ,YAAYf,MAAM,YAAYiC,QAAS,SAACS,GAAD,OAAO,EAAK5D,MAAM6D,OAAO,IAAKD,IAArF,0BAEJ,cAACd,EAAA,EAAOC,IAAR,CACEC,WAAY,CAACC,MAAO,KADtB,SAGI,cAACC,EAAA,EAAD,CAAQjB,QAAQ,YAAYf,MAAM,YAAYiC,QAAS,SAACS,GAAD,OAAO,EAAK5D,MAAM6D,OAAO,IAAKD,IAArF,oCASV,qBAAK3D,UAAU,gBAAf,SACA,cAAC+B,EAAA,EAAD,CAAM/B,UAAU,gBAAgBgC,QAAQ,YAAYC,OAAS,OAA7D,SACI,qBAAKjC,UAAU,sBAAf,SACE,eAACkC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACI,EAAA,EAAD,iB,GA7GsBsB,IAAMC,W,+DCf7B,SAASC,EAAUhE,GAAQ,IAAD,EACbiE,oBAAS,GADI,mBAC9BvC,EAD8B,KACxBwC,EADwB,KAMrC,OACI,gCACI,cAACC,EAAA,EAAD,CAAQlE,UAAY,SAASmE,SAAW,SAAxC,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYnB,QAPP,WACjBe,GAAQ,IAMuChD,MAAQ,UAAUqD,KAAK,QAAQC,aAAW,OAA7E,SACI,cAACC,EAAA,EAAD,MAEJ,cAAChC,EAAA,EAAD,CAAYR,QAAQ,KAApB,8BAIR,eAACyC,EAAA,EAAD,CACIC,OAAO,OACP1C,QAAU,YACVP,KAAMA,EACN2B,QAAS,WAAOa,GAAQ,IAJ5B,UAMI,cAACzB,EAAA,EAAD,CAAYR,QAAQ,KAApB,oBACA,cAAC2C,EAAA,EAAD,IACC5E,EAAM6E,YAAYlC,KAAI,SAAAmC,GAAO,OAC1B,gCACI,cAAC5B,EAAA,EAAD,CAAQjB,QAAQ,YAAYf,MAAQ,UAAUiC,QAAW,SAACS,GACtD5D,EAAM6D,OAAOiB,EAAQC,GAAInB,GACzBM,GAAQ,IAFZ,SAGQY,EAAQ3D,QAChB,cAACyD,EAAA,EAAD,gB,ICDHI,E,kDA6BjB,WAAYhF,GAAQ,IAAD,8BACf,cAAMA,IA3BViF,aAAe,4BA0BI,EAxBnBC,cAAgB,GAwBG,EAvBnBC,cAAe,GAuBI,EArBnBC,YAAY,EAqBO,EAlBnB3D,MAAQ,CACJ4D,gBAAiB,CAAC,GAClBC,gBAAiB,EAGjBC,MAAO,CACH,CACIjF,GAAI,EACJkF,MAAO,EACPC,KAAM,IAAI/E,EACVgF,SAAU,EACVC,EAAG,EACHC,QAAQ,KAMD,EA0EnBC,0BA1EmB,sBA0ES,oCAAAC,EAAA,+EAESC,IAAMC,IAAI,EAAKf,aAAa,cAFrC,OAMpB,IAJMgB,EAFc,OAGhBC,EAAW,GACXC,EAAa,GAERC,EAAI,EAAGA,EAAE,EAAKhB,YAAYgB,IAC/BD,EAAWE,KAAMD,GAAG,IAAI,EAAKhB,aAAc,KAG/C,IADAtD,QAAQC,IAAI,iCAA8BoE,EAAWG,QAC5CC,EAAI,EAAGA,EAAEN,EAAeO,KAAKF,OAAQC,GAAI,EAE9CL,EAAUG,KACN,CACI/F,GAAIiG,EACJf,MAAOe,EAAEJ,EAAWG,OACpBb,KAAM,IAAI/E,EACNuF,EAAeO,KAAKD,GAAGpF,MACvB,KACA8E,EAAeO,KAAKD,GAAGE,aACvBR,EAAeO,KAAKD,GAAGG,SACvBT,EAAeO,KAAKD,GAAGI,MAE3BjB,SAAUS,EAAWI,EAAEJ,EAAWG,QAClCV,OAAW,GAAHW,EACRZ,EAAGM,EAAeO,KAAKF,QAAQC,EAAE,KAK7C,EAAK3E,SAAS,CACVyD,gBAAiBc,EACjBZ,MAAOW,IAhCS,kDAmCpB,EAAKtE,SAAS,CAAEgF,MAAK,OACrBC,MAAM,WAAW,EAAX,IApCc,0DA1ET,E,gDAMnB,SAAaC,EAAGlD,GASZ,IARA,IAAMmD,EAAe1F,KAAKI,MAAM8D,MAAMuB,GAAGtB,MACnCwB,EAAW3F,KAAKI,MAAM8D,MAEtB0B,EAAW5F,KAAK+D,YAAY2B,EAC5BG,EAAaF,EAASV,OAAO,EAAGU,EAASF,GAAGnB,EAE9CwB,EAAS9F,KAAKI,MAAM6D,gBAEhBiB,EAAE,EAAGA,EAAES,EAASV,OAAQC,IAC5BS,EAAST,GAAGf,OAAOwB,EAAST,GAAGf,MAAMyB,GAAU5F,KAAK+D,YACpD4B,EAAST,GAAGb,SAASrE,KAAKI,MAAM4D,gBAAgB2B,EAAST,GAAGf,OAC5DwB,EAAST,GAAGZ,GAAGqB,EAAST,GAAGZ,EAAEuB,GAAWF,EAASV,OAC9CU,EAAST,GAAGZ,EAAEqB,EAASG,GAAQxB,IAAGwB,EAAOZ,GAC5CS,EAAST,GAAGX,QAAS,EAKzB,IADA,IAAIwB,EAAS,EACLC,EAAE,EAAGA,EAAEL,EAASV,OAAOe,IACxBL,EAASK,GAAG1B,EAAEqB,EAASI,GAAUzB,IAChCyB,EAASC,GAIjBL,EADAG,EAAOC,GACUxB,QAAO,EAExBvE,KAAKO,SAAS,CACV2D,MAAOyB,EACP1B,gBAAiB6B,M,gCAIzB,SAAmBL,EAAGlD,GAElB,IAAMoD,EAAW3F,KAAKI,MAAM8D,MACjBuB,EAAL,KAAHA,GAAWzF,KAAKI,MAAM6D,gBAAgB,GAAG0B,EAASV,QAAiBjF,KAAKI,MAAM6D,iBAAiB0B,EAASV,OAAO,IAAIU,EAASV,OAQ/H,IAPA,IAAMS,EAAe1F,KAAKI,MAAM8D,MAAMuB,GAAGtB,MAEnCyB,EAAW5F,KAAK+D,YAAY2B,EAC5BG,EAAaF,EAASV,OAAO,EAAGU,EAASF,GAAGnB,EAE9CwB,EAAS9F,KAAKI,MAAM6D,gBAEhBiB,EAAE,EAAGA,EAAES,EAASV,OAAQC,IAC5BS,EAAST,GAAGf,OAAOwB,EAAST,GAAGf,MAAMyB,GAAU5F,KAAK+D,YACpD4B,EAAST,GAAGb,SAASrE,KAAKI,MAAM4D,gBAAgB2B,EAAST,GAAGf,OAC5DwB,EAAST,GAAGZ,GAAGqB,EAAST,GAAGZ,EAAEuB,GAAWF,EAASV,OAC9CU,EAAST,GAAGZ,EAAEqB,EAASG,GAAQxB,IAAGwB,EAAOZ,GAC5CS,EAAST,GAAGX,QAAS,EAKzB,IADA,IAAIwB,EAAS,EACLC,EAAE,EAAGA,EAAEL,EAASV,OAAOe,IACxBL,EAASK,GAAG1B,EAAEqB,EAASI,GAAUzB,IAChCyB,EAASC,GAIjBL,EADAG,EAAOC,GACUxB,QAAO,EAExBvE,KAAKO,SAAS,CACV2D,MAAOyB,EACP1B,gBAAiB6B,M,wBAwEzB,WAEI,IADA,IAAIG,EAAY,GACPC,EAAI,EAAGA,EAAElG,KAAKI,MAAM8D,MAAMe,OAAOiB,IACtCD,EAAUjB,KAAK,CACXtB,GAAIwC,EACJpG,MAAOE,KAAKI,MAAM8D,MAAMgC,GAAG9B,KAAK9E,QAGxC,OAAO2G,I,oBAGX,WAAS,IAAD,OACJ,OACI,qBAAKrH,UAAU,cAAf,SACA,eAACuH,EAAA,EAAD,CAAMC,WAAS,EAACxH,UAAU,iBAAiByH,QAAS,EAApD,UACI,cAACF,EAAA,EAAD,CAAMvH,UAAU,iBAAiB0H,MAAI,EAACC,GAAI,GAA1C,SACI,cAAC9E,EAAA,EAAOC,IAAR,CACI8E,QAAW,CACPC,OAAQ,IAFhB,SAKI,cAAC9D,EAAD,CACIa,YAAexD,KAAK0G,aACpBlE,OAAU,SAACiD,EAAGlD,GAAJ,OAAU,EAAKoE,aAAalB,EAAGlD,UAIrD,cAAC4D,EAAA,EAAD,CAAMvH,UAAY,WAAW0H,MAAI,EAACC,GAAI,IACtC,cAACJ,EAAA,EAAD,CAAMvH,UAAY,aAAa0H,MAAI,EAACC,GAAI,EAAxC,SACI,cAAC9E,EAAA,EAAOC,IAAR,CAAY9C,UAAY,UAAxB,SACKoB,KAAKI,MAAM8D,MAAM5C,KAAI,SAAA6D,GAAI,OACtB,cAAC1D,EAAA,EAAOC,IAAR,CACI8E,QAAS,CACLI,OAAQzB,EAAKd,SACboC,OAAQtB,EAAKb,EACbuC,QAAS,EAAKhD,cACdiD,QAAS,EAAKhD,eAElBlF,UAAYuG,EAAKZ,OAAS,yBAA2B,yBAPzD,SASI,cAAC,EAAD,CACIrE,MAAOiF,EAAKf,KACZjE,OAAQgF,EAAKZ,OACb/B,OAAU,SAACiD,EAAGlD,GAAJ,OAAU,EAAKwE,mBAAmBtB,EAAGlD,eAMnE,cAAC4D,EAAA,EAAD,CAAMvH,UAAY,YAAY0H,MAAI,EAACC,GAAI,a,GA5NlB9D,IAAMC,WCzB5BsE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBvG,QAAQC,M","file":"static/js/main.d2a125ce.chunk.js","sourcesContent":["import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport './styling.css';\r\n\r\nexport default function Akkordeon(props) {\r\n    return(\r\n        <div className='Akkordeon'>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon = {<ExpandMoreIcon />}\r\n                    aria-controls = 'panel1a-content'\r\n                    id = 'panel1a-header'\r\n                >\r\n                    <b>{props.titel}</b>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <ReactMarkdown>\r\n                        {props.inhalt}\r\n                    </ReactMarkdown>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n","import CircularProgress from '@material-ui/core/CircularProgress'\r\nimport './styling.css';\r\n\r\nexport default class Thema {\r\n    defaultProps = {\r\n        title: <CircularProgress color='secondary' />,\r\n        img: '/placeholder.jpg', //TODO: Schnittstelle für Bilder vom Server schaffen.\r\n        descr: <CircularProgress color='secondary' />,\r\n        acordeones: [{Titel: 'Loading...', Inhalt: 'Loading...',}],\r\n        refs: 'Referenzen und Anregungen',                \r\n    }\r\n\r\n    constructor(title, img, descr, acordeones, refs){\r\n        title ? this.title = title : this.title = this.defaultProps.title;\r\n        img ? this.img = img : this.img = this.defaultProps.img;\r\n        descr ? this.descr = descr : this.descr = this.defaultProps.descr;\r\n        acordeones ? this.acordeones = acordeones : this.acordeones = this.defaultProps.acordeones;\r\n        refs ? this.refs = refs : this.refs = this.defaultProps.refs;\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n//Popover für mehr Informationen oder Vokabular\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Akkordeon from './Akkordeon.jsx';\r\nimport Thema from './Thema.jsx'\r\nimport './styling.css';\r\n\r\nexport default class Streifen extends React.Component {\r\n  defaultProps = {\r\n    thema: new Thema(),\r\n    active: false,\r\n  }\r\n  \r\n  state = {\r\n    open: false,\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    props.thema ? this.thema = props.thema : this.thema = this.defaultProps.thema;\r\n    props.active ? this.active = props.active : this.active=this.defaultProps.active;\r\n    console.log('New Streifen:');\r\n    console.log('ACTIVE?'+props.active);\r\n  }\r\n  \r\n  render(){  \r\n    if(this.props.active){\r\n      return(\r\n        <div className=\"Streifen\">\r\n        <Card className='Streifenkarte' variant='elevation' raised = 'true'>\r\n            <div className='Karteninhalt'>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                component = 'img'\r\n                  image = {process.env.PUBLIC_URL+this.thema.img}\r\n                  title = \"Titelbild\"\r\n                />\r\n                <CardContent>\r\n                <Typography variant='h5' gutterBottom component='center'>\r\n                          {this.props.thema.title}\r\n                        </Typography>\r\n                        <Typography variant='body2' >\r\n                          <ReactMarkdown>\r\n                            {this.props.thema.descr}\r\n                          </ReactMarkdown>\r\n                        </Typography>\r\n                        \r\n                        <div>{this.props.thema.acordeones.map(acordeon => \r\n                          <Akkordeon\r\n                            titel= {acordeon.Titel}\r\n                            inhalt={acordeon.Inhalt}\r\n                          />\r\n                          )  \r\n                        }</div>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </div>\r\n            <CardActions>\r\n              <motion.div\r\n                whileHover = {{scale: 1.1}}>\r\n                  <Button onClick = {this.handleClickOpen} variant='contained' color='primary'>Aprende más</Button>\r\n              </motion.div>\r\n              <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'\r\n              >\r\n                <DialogTitle id='alert-dialog-title'>\r\n                  Anregungen und weiterführende Links\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id='alert-dialog-description'>\r\n                    {this.props.thema.refs}\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick = {this.handleClose} color = 'primary'>\r\n                    Schließen\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n              <motion.div\r\n                whileHover= {{scale: 1.1}}\r\n              >\r\n                  <Button variant='contained' color='secondary' onClick={(e) => this.props.action('-', e)}> Anterior </Button>\r\n              </motion.div>\r\n              <motion.div\r\n                whileHover={{scale: 1.1}}\r\n              >\r\n                  <Button variant='contained' color='secondary' onClick={(e) => this.props.action('+', e)}> Próximo </Button>\r\n              </motion.div>\r\n            </CardActions>\r\n        </Card>\r\n        \r\n      </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className='StreifenRueck'>\r\n        <Card className='StreifenRueck' variant='elevation' raised = 'true'>\r\n            <div className='KarteninhaltCovered'>\r\n              <CardActionArea>\r\n                <CardMedia/>\r\n                <CardContent>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </div>\r\n        </Card>\r\n      </div>         \r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport {AppBar, Toolbar, Typography, Button, Drawer, IconButton} from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport './styling.css';\r\n\r\nexport default function NavDrawer(props) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawer = () => {\r\n        setOpen(true);\r\n    }\r\n    return(\r\n        <div>\r\n            <AppBar className = 'AppBar' position = 'static'>\r\n                <Toolbar>\r\n                    <IconButton onClick={handleDrawer} color = 'inherit' edge='start' aria-label='menu'>\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" >Digikom-App</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Drawer\r\n                anchor='left'\r\n                variant = 'temporary'\r\n                open={open}\r\n                onClose={() => {setOpen(false)}}\r\n            >\r\n                <Typography variant=\"h4\">Inhalt</Typography>\r\n                <Divider/>\r\n                {props.buttonNamen.map(element => \r\n                    <div>\r\n                        <Button variant='contained' color = 'primary' onClick = {(e) => {\r\n                            props.action(element.ID, e);\r\n                            setOpen(false);\r\n                            }}>{element.Titel}</Button>\r\n                        <Divider/>\r\n                    </div>\r\n                )}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport axios from 'axios';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Streifen from './Streifen';\r\nimport Thema from './Thema.jsx';\r\nimport NavDrawer from './Drawer.jsx';\r\n//import './Kompass.css';\r\nimport './styling.css';\r\n\r\n/*\r\n    TODO:   X   Themenanzahl dynamisieren\r\n            X   Manuelle AppBar-Programmierung durch Schleife ersetzen\r\n                X   evtl. hierfür Datenstruktur im State ändern (Array anstelle eines Objektes)\r\n            X   Manuelle Streifenerstellung durch Schleife ersetzen\r\n                X   evtl. hierfür Datenstruktur im State ändern (Array anstelle eines Objektes)\r\n            X   Rotationen standardisieren (z.B. auf fünf Streifen (7) begrenzen wie im Original, dann modulo 360°)\r\n            X   Neue Navigationsleiste entwerfen\r\n            ~   Kompass-Server mit Daten füllen (Abschrift des Analogkompasses)\r\n            ~   Gestaltung, CSS usw.\r\n            ~   Anpassung an verschiedene Gerätetypen\r\n            *   Durchkommentieren\r\n            X   Toten Code entfernen\r\n            *   Bezeichnungen überprüfen und ggf. ändern\r\n            *   App hochladen, Server auch.\r\n            *   Nutzerumfrage\r\n                -   entwerfen\r\n                -   durchführen\r\n                -   auswerten\r\n            *   Arbeit schreiben\r\n*/\r\n\r\nexport default class Kompass extends React.Component {\r\n\r\n    //ATTRIBUTE\r\n    serverAdress = 'http://192.168.2.118:1337';\r\n    //Eigenschaften zur Justierung der Rotationsanimation, insb. Rotationsursprung -> hier in der Mitte.\r\n    globalOriginX = 0.5; //0.5;\r\n    globalOriginY= 0.5; //'450px';\r\n    \r\n    rotStrCoeff=7; //Wie viele Streifen gedreht sein sollen, damit bei großer Anzahl von Themen kein \"Kreis\" angenähert wird.\r\n    \r\n    \r\n    state = {\r\n        rotations_array: [0],\r\n        aktiverStreifen: 0,\r\n        \r\n        //Ein Array aus Objekten mit allen Informationen\r\n        daten: [\r\n            {\r\n                id: 0,\r\n                rotID: 0, //ID ist Index im rotationsArray. Wird bei Interaktionen angepasst, um Rotationen zu verschieben.\r\n                tema: new Thema(),\r\n                rotation: 0,\r\n                z: 1,\r\n                activo: true,\r\n            }\r\n        ],\r\n    }\r\n    \r\n    //KONSTRUKTOR\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    //FUNKTIONEN\r\n    //ClickHandler-Funktionen können zusammengefasst werden mit Zeile if-Abfrage nach '+' und '-'.\r\n    clickHandler(m, e){ //m=ID des Streifens, zu dem rotiert werden soll.\r\n        const rotID_target = this.state.daten[m].rotID;\r\n        const workCopy = this.state.daten;\r\n\r\n        const rotCoeff = this.rotStrCoeff-rotID_target;\r\n        const zDifCoeff = (workCopy.length-1)-workCopy[m].z;\r\n        \r\n        var aktStr = this.state.aktiverStreifen;\r\n\r\n        for(let i=0; i<workCopy.length; i++){\r\n            workCopy[i].rotID=(workCopy[i].rotID+rotCoeff)%this.rotStrCoeff;\r\n            workCopy[i].rotation=this.state.rotations_array[workCopy[i].rotID];\r\n            workCopy[i].z=(workCopy[i].z+zDifCoeff)%workCopy.length;\r\n            if(workCopy[i].z>workCopy[aktStr].z){aktStr=i;}\r\n            workCopy[i].activo = false;\r\n        }\r\n\r\n        //determine highest z-index\r\n        var currentz=0;\r\n        for(let j=0; j<workCopy.length;j++){\r\n            if(workCopy[j].z>workCopy[currentz].z){\r\n                currentz=j;\r\n            }\r\n        }\r\n        aktStr=currentz;\r\n        workCopy[aktStr].activo=true;\r\n        \r\n        this.setState({\r\n            daten: workCopy,\r\n            aktiverStreifen: aktStr,\r\n        }); \r\n    }\r\n\r\n    handleSwitchButton(m, e){\r\n        /*m='+' für nächster oder '-' für voriger Streifen*/\r\n        const workCopy = this.state.daten;\r\n        if(m=='+'){m=(this.state.aktiverStreifen+1)%workCopy.length;}else{m=((this.state.aktiverStreifen+(workCopy.length-1))%workCopy.length);}\r\n        const rotID_target = this.state.daten[m].rotID;\r\n        \r\n        const rotCoeff = this.rotStrCoeff-rotID_target;\r\n        const zDifCoeff = (workCopy.length-1)-workCopy[m].z;\r\n        \r\n        var aktStr = this.state.aktiverStreifen;\r\n\r\n        for(let i=0; i<workCopy.length; i++){\r\n            workCopy[i].rotID=(workCopy[i].rotID+rotCoeff)%this.rotStrCoeff;\r\n            workCopy[i].rotation=this.state.rotations_array[workCopy[i].rotID];\r\n            workCopy[i].z=(workCopy[i].z+zDifCoeff)%workCopy.length;\r\n            if(workCopy[i].z>workCopy[aktStr].z){aktStr=i;}\r\n            workCopy[i].activo = false;\r\n        }\r\n\r\n        //determine highest z-index\r\n        var currentz=0;\r\n        for(let j=0; j<workCopy.length;j++){\r\n            if(workCopy[j].z>workCopy[currentz].z){\r\n                currentz=j;\r\n            }\r\n        }\r\n        aktStr=currentz;\r\n        workCopy[aktStr].activo=true;\r\n        \r\n        this.setState({\r\n            daten: workCopy,\r\n            aktiverStreifen: aktStr,\r\n        });\r\n    }\r\n        \r\n    UNSAFE_componentWillMount = async() => {\r\n        try {\r\n            const serverResponse = await axios.get(this.serverAdress+\"/streifens\");\r\n            var neueDaten= [];\r\n            var rotationen = [];\r\n            \r\n            for (let x = 0; x<this.rotStrCoeff;x++){\r\n                rotationen.push((x*(360/this.rotStrCoeff))%360);\r\n            }\r\n            console.log('Länge des Rotationsarrays: '+rotationen.length);\r\n            for (let i = 0; i<serverResponse.data.length; i=i+1){\r\n                \r\n                neueDaten.push(\r\n                    {\r\n                        id: i,\r\n                        rotID: i%rotationen.length,\r\n                        tema: new Thema(\r\n                            serverResponse.data[i].Titel,\r\n                            null, //Image\r\n                            serverResponse.data[i].Beschreibung, \r\n                            serverResponse.data[i].Acordeon, \r\n                            serverResponse.data[i].Refs\r\n                            ),\r\n                        rotation: rotationen[i%rotationen.length],\r\n                        activo: i==0 ? true : false,\r\n                        z: serverResponse.data.length-(i+1),\r\n                    }\r\n                );\r\n            }\r\n            \r\n            this.setState({\r\n                rotations_array: rotationen, \r\n                daten: neueDaten,\r\n            });\r\n        } catch (error) {\r\n            this.setState({ error })\r\n            alert(\"Error:\\n\"+error)\r\n        }\r\n    }\r\n    \r\n    //NOCH NICHT LÖSCHEN!!! Falls Probleme mit UNSAFE_componentWillMount auftreten!\r\n    /*componentDidMount = async() => {\r\n        try {\r\n            const serverResponse = await axios.get(this.serverAdress+\"/streifens\");\r\n            //this.setState({data: response.data});\r\n            //alert(this.state.data[0].Titel);\r\n            //this.themaEins.title=response.data[0].Titel;\r\n            console.log(serverResponse);\r\n            this.setState({ data: {\r\n                themaEins: new Thema(serverResponse.data[0].Titel, null, serverResponse.data[0].Beschreibung, serverResponse.data[0].Acordeon),\r\n                themaZwei: new Thema(serverResponse.data[1].Titel, null, serverResponse.data[1].Beschreibung, serverResponse.data[1].Acordeon),\r\n                themaDrei: new Thema(serverResponse.data[2].Titel, null, serverResponse.data[2].Beschreibung, serverResponse.data[2].Acordeon),\r\n                themaVier: new Thema(serverResponse.data[3].Titel, null, serverResponse.data[3].Beschreibung, serverResponse.data[3].Acordeon),\r\n                themaFuenf: new Thema(serverResponse.data[4].Titel, null, serverResponse.data[4].Beschreibung, serverResponse.data[4].Acordeon),\r\n                themaSechs: new Thema(serverResponse.data[5].Titel, null, serverResponse.data[5].Beschreibung, serverResponse.data[5].Acordeon),\r\n                themaSieben: new Thema(serverResponse.data[6].Titel, null, serverResponse.data[6].Beschreibung, serverResponse.data[6].Acordeon),\r\n                themaAcht: new Thema(serverResponse.data[7].Titel, null, serverResponse.data[7].Beschreibung, serverResponse.data[7].Acordeon),\r\n                themaNeun: new Thema(serverResponse.data[8].Titel, null, serverResponse.data[8].Beschreibung, serverResponse.data[8].Acordeon),\r\n                themaZehn: new Thema(serverResponse.data[9].Titel, null, serverResponse.data[9].Beschreibung, serverResponse.data[9].Acordeon),\r\n            } });\r\n            console.log('Nach componentDidMount:' + this.state.data.themaEins);\r\n        } catch (error) {\r\n            this.setState({ error })\r\n            alert(\"Error:\\n\"+error)\r\n        }\r\n        \r\n    }*/\r\n    \r\n    makeTitels() {\r\n        var nameArray = [];\r\n        for (let n = 0; n<this.state.daten.length;n++){\r\n            nameArray.push({\r\n                ID: n,\r\n                Titel: this.state.daten[n].tema.title},\r\n                );\r\n        }\r\n        return nameArray;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Oberflaeche'>\r\n            <Grid container className=\"GridBackground\" spacing={8}>\r\n                <Grid className='GridBackground' item xs={12}>\r\n                    <motion.div\r\n                        animate = {{\r\n                            zIndex: 42,\r\n                        }}\r\n                        >\r\n                        <NavDrawer\r\n                            buttonNamen = {this.makeTitels()}\r\n                            action = {(m, e) => this.clickHandler(m, e)}\r\n                        />\r\n                    </motion.div>                    \r\n                </Grid>\r\n                <Grid className = \"LeftGrid\" item xs={3}></Grid>\r\n                <Grid className = \"MiddleGrid\" item xs={6}>\r\n                    <motion.div className = 'Kompass'>\r\n                        {this.state.daten.map(data =>\r\n                            <motion.div \r\n                                animate={{\r\n                                    rotate: data.rotation,\r\n                                    zIndex: data.z,\r\n                                    originX: this.globalOriginX,\r\n                                    originY: this.globalOriginY,\r\n                                }}\r\n                                className= {data.activo ? 'Kompassstreifen_Active' : 'Kompassstreifen_Hidden'}//evtl als Streifenklasse verwenden\r\n                            >\r\n                                <Streifen\r\n                                    thema={data.tema}\r\n                                    active={data.activo}\r\n                                    action = {(m, e) => this.handleSwitchButton(m, e)}                            \r\n                                />   \r\n                            </motion.div>\r\n                        )} \r\n                    </motion.div>   \r\n                </Grid>\r\n                <Grid className = \"RightGrid\" item xs={3}></Grid>\r\n            </Grid>        \r\n        </div>\r\n        );\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './styling.css';\n\nimport Kompass from './Kompass';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Kompass />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}