{"version":3,"sources":["Akkordeon.jsx","Thema.jsx","Streifen.jsx","Drawer.jsx","Kompass.jsx","reportWebVitals.js","index.js"],"names":["Akkordeon","props","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","titel","AccordionDetails","inhalt","Thema","title","img","descr","acordeones","refs","defaultProps","CircularProgress","color","Titel","Inhalt","this","Streifen","thema","active","state","open","handleClickOpen","setState","handleClose","Card","variant","raised","CardActionArea","CardMedia","component","image","process","CardContent","Typography","gutterBottom","map","acordeon","CardActions","motion","div","whileHover","scale","Button","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","e","action","navigation","React","Component","NavDrawer","useState","setOpen","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","version","Drawer","anchor","Divider","buttonNamen","element","ID","window","impressumlink","Kompass","impressum_link","impressum","serverAdress","server","globalOriginX","globalOriginY","rotStrCoeff","rotations_array","aktiverStreifen","daten","rotID","tema","rotation","z","activo","UNSAFE_componentWillMount","a","axios","get","serverResponse","neueDaten","rotationen","x","push","console","log","length","i","data","Beschreibung","Acordeon","Refs","sort","b","error","alert","handleLinkClick","m","rotID_target","workCopy","rotCoeff","zDifCoeff","aktStr","currentz","j","forEach","nameArray","n","animate","zIndex","makeTitels","clickHandler","rotate","originX","originY","handleSwitchButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb9e28dc.chunk.js","sourcesContent":["import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport './style.css';\r\n\r\nexport default function Akkordeon(props) {\r\n    return(\r\n        <div className='Akkordeon'>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon = {<ExpandMoreIcon />}\r\n                    aria-controls = 'panel1a-content'\r\n                    id = 'panel1a-header'\r\n                >\r\n                    <b>{props.titel}</b>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <ReactMarkdown>\r\n                        {props.inhalt}\r\n                    </ReactMarkdown>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n","import CircularProgress from '@material-ui/core/CircularProgress'\r\nimport './style.css';\r\n\r\nexport default class Thema {\r\n    defaultProps = {\r\n        title: <CircularProgress color='secondary' />,\r\n        img: '/placeholder.jpg', //TODO: Schnittstelle für Bilder vom Server schaffen.\r\n        descr: <CircularProgress color='secondary' />,\r\n        acordeones: [{Titel: 'Loading...', Inhalt: 'Loading...',}],\r\n        refs: 'Referenzen und Anregungen',                \r\n    }\r\n\r\n    constructor(title, img, descr, acordeones, refs){\r\n        title ? this.title = title : this.title = this.defaultProps.title;\r\n        img ? this.img = img : this.img = this.defaultProps.img;\r\n        descr ? this.descr = descr : this.descr = this.defaultProps.descr;\r\n        acordeones ? this.acordeones = acordeones : this.acordeones = this.defaultProps.acordeones;\r\n        refs ? this.refs = refs : this.refs = this.defaultProps.refs;\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n//Popover für mehr Informationen oder Vokabular\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Akkordeon from './Akkordeon.jsx';\r\nimport Thema from './Thema.jsx'\r\nimport './style.css';\r\n\r\nexport default class Streifen extends React.Component {\r\n  defaultProps = {\r\n    thema: new Thema(),\r\n    active: false,\r\n  }\r\n  \r\n  state = {\r\n    open: false,\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    props.thema ? this.thema = props.thema : this.thema = this.defaultProps.thema;\r\n    props.active ? this.active = props.active : this.active=this.defaultProps.active;\r\n    //console.log('New Streifen:');\r\n    //console.log('ACTIVE?'+props.active);\r\n  }\r\n  \r\n  render(){  \r\n    if(this.props.active){\r\n      return(\r\n        <div className=\"Streifen\">\r\n        <Card className='Streifenkarte' variant='elevation' raised = 'true'>\r\n            <div className='Karteninhalt'>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                component = 'img'\r\n                  image = {process.env.PUBLIC_URL+this.thema.img}\r\n                  title = \"Titelbild\"\r\n                />\r\n                <CardContent>\r\n                <Typography variant='h5' gutterBottom component='center'>\r\n                          {this.props.thema.title}\r\n                        </Typography>\r\n                        <Typography variant='body2' >\r\n                          <ReactMarkdown>\r\n                            {this.props.thema.descr}\r\n                          </ReactMarkdown>\r\n                        </Typography>\r\n                        \r\n                        <div>{this.props.thema.acordeones.map(acordeon => \r\n                          <Akkordeon\r\n                            titel= {acordeon.Titel}\r\n                            inhalt={acordeon.Inhalt}\r\n                          />\r\n                          )  \r\n                        }</div>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </div>\r\n            <CardActions>\r\n              <motion.div\r\n                whileHover = {{scale: 1.1}}>\r\n                  <Button onClick = {this.handleClickOpen} variant='contained' color='primary'>Mehr erfahren</Button>\r\n              </motion.div>\r\n              <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'\r\n              >\r\n                <DialogTitle id='alert-dialog-title'>\r\n                  Anregungen und weiterführende Links\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id='alert-dialog-description'>\r\n                    {this.props.thema.refs}\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick = {this.handleClose} color = 'primary'>\r\n                    Schließen\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n              <motion.div\r\n                whileHover= {{scale: 1.1}}\r\n              >\r\n                  <Button variant='contained' color='secondary' onClick={(e) => this.props.action('-', e)}> Vorheriger </Button>\r\n              </motion.div>\r\n              <motion.div\r\n                whileHover={{scale: 1.1}}\r\n              >\r\n                  <Button variant='contained' color='secondary' onClick={(e) => this.props.action('+', e)}> Nächster </Button>\r\n              </motion.div>\r\n            </CardActions>\r\n        </Card>\r\n        \r\n      </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className='StreifenRueck'>\r\n        <Card className='StreifenRueck' variant='elevation' raised = 'true' onClick={(e) => this.props.navigation(this.props.id-1, e)}>\r\n            <div className='KarteninhaltCovered'>\r\n              <CardActionArea>\r\n                <CardMedia/>\r\n                <CardContent>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </div>\r\n        </Card>\r\n      </div>         \r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport {AppBar, Toolbar, Typography, Button, Drawer, IconButton} from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport './style.css';\r\n\r\nexport default function NavDrawer(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleLinkClick = () => {\r\n        window.open(props.impressumlink)\r\n    }\r\n    const handleDrawer = () => {\r\n        setOpen(true);\r\n    }\r\n    return(\r\n        <div>\r\n            <AppBar className = 'AppBar' position = 'static'>\r\n                <Toolbar>\r\n                    <IconButton onClick={handleDrawer} color = 'inherit' edge='start' aria-label='menu'>\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" >Digikom-App {props.version}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Drawer\r\n                className=\"drawer\"\r\n                anchor='left'\r\n                variant = 'temporary'\r\n                open={open}\r\n                onClose={() => {setOpen(false)}}\r\n            >\r\n                <Typography variant=\"h4\">Inhalt</Typography>\r\n                <Divider/>\r\n                {props.buttonNamen.map(element => \r\n                    <div>\r\n                        <Button className=\"DrawerButton\" variant='contained' color = 'primary' onClick = {(e) => {\r\n                            props.action(element.ID, e);\r\n                            setOpen(false);\r\n                            }}>{element.Titel}</Button>\r\n                        <Divider/>\r\n                    </div>\r\n                )}\r\n                <Button variant=\"contained\" color= \"secondary\" onClick={(e)=>handleLinkClick()}>Kontakt</Button>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\n//import Box from '@mui/material/Box';\r\n//import Button from '@material-ui/core/Button';\r\n//import ButtonGroup from '@material-ui/core/ButtonGroup';\r\n//import AppBar from '@material-ui/core/AppBar';\r\n//import Grid from '@material-ui/core/Grid';\r\n\r\nimport axios from 'axios';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Streifen from './Streifen';\r\nimport Thema from './Thema.jsx';\r\nimport NavDrawer from './Drawer.jsx';\r\n//import './Kompass.css';\r\nimport './style.css';\r\nimport Button from '@material-ui/core/Button';\r\n//import { width } from '@mui/system';\r\n\r\n/*\r\n    TODO:   X   Themenanzahl dynamisieren\r\n            X   Manuelle AppBar-Programmierung durch Schleife ersetzen\r\n                X   evtl. hierfür Datenstruktur im State ändern (Array anstelle eines Objektes)\r\n            X   Manuelle Streifenerstellung durch Schleife ersetzen\r\n                X   evtl. hierfür Datenstruktur im State ändern (Array anstelle eines Objektes)\r\n            X   Rotationen standardisieren (z.B. auf fünf Streifen (7) begrenzen wie im Original, dann modulo 360°)\r\n            X   Neue Navigationsleiste entwerfen\r\n            ~   Kompass-Server mit Daten füllen (Abschrift des Analogkompasses)\r\n            ~   Gestaltung, CSS usw.\r\n            ~   Anpassung an verschiedene Gerätetypen\r\n            *   Durchkommentieren\r\n            X   Toten Code entfernen\r\n            *   Bezeichnungen überprüfen und ggf. ändern\r\n            ~   App hochladen, Server auch.\r\n            *   Nutzerumfrage\r\n                -   entwerfen\r\n                -   durchführen\r\n                -   auswerten\r\n            ~   Arbeit schreiben\r\n*/\r\n\r\nexport default class Kompass extends React.Component {\r\n\r\n    //ATTRIBUTE\r\n    //impressum_link = \"https://omen.cs.uni-magdeburg.de/itiamsl/deutsch/home/index.html\";\r\n    //serverAdress = 'localhost:1337';\r\n    impressum_link = this.props.impressum;\r\n    serverAdress = this.props.server;\r\n    //Eigenschaften zur Justierung der Rotationsanimation, insb. Rotationsursprung -> hier in der Mitte.\r\n    globalOriginX = 0.5; //0.5;\r\n    globalOriginY= 0.5; //'450px';\r\n    \r\n    rotStrCoeff=7; //Wie viele Streifen gedreht sein sollen, damit bei großer Anzahl von Themen kein \"Kreis\" angenähert wird.\r\n    \r\n    \r\n    state = {\r\n        rotations_array: [0],\r\n        aktiverStreifen: 0,\r\n        \r\n        //Ein Array aus Objekten mit allen Informationen\r\n        daten: [\r\n            {\r\n                id: 0,\r\n                rotID: 0, //ID ist Index im rotationsArray. Wird bei Interaktionen angepasst, um Rotationen zu verschieben.\r\n                tema: new Thema(),\r\n                rotation: 0,\r\n                z: 1,\r\n                activo: true,\r\n            }\r\n        ],\r\n    }\r\n    \r\n    //KONSTRUKTOR\r\n    /*constructor(props) {\r\n        super(props);\r\n    }*/\r\n\r\n    //FUNKTIONEN\r\n    //ClickHandler-Funktionen können zusammengefasst werden mit Zeile if-Abfrage nach '+' und '-'.\r\n    clickHandler(m, e){ //m=ID des Streifens, zu dem rotiert werden soll.\r\n        const rotID_target = this.state.daten[m].rotID;\r\n        const workCopy = this.state.daten;\r\n\r\n        const rotCoeff = this.rotStrCoeff-rotID_target;\r\n        const zDifCoeff = (workCopy.length-1)-workCopy[m].z;\r\n        \r\n        var aktStr = this.state.aktiverStreifen;\r\n\r\n        for(let i=0; i<workCopy.length; i++){\r\n            workCopy[i].rotID=(workCopy[i].rotID+rotCoeff)%this.rotStrCoeff;\r\n            workCopy[i].rotation=this.state.rotations_array[workCopy[i].rotID];\r\n            workCopy[i].z=(workCopy[i].z+zDifCoeff)%workCopy.length;\r\n            if(workCopy[i].z>workCopy[aktStr].z){aktStr=i;}\r\n            workCopy[i].activo = false;\r\n        }\r\n\r\n        //determine highest z-index\r\n        var currentz=0;\r\n        for(let j=0; j<workCopy.length;j++){\r\n            if(workCopy[j].z>workCopy[currentz].z){\r\n                currentz=j;\r\n            }\r\n        }\r\n        aktStr=currentz;\r\n        workCopy[aktStr].activo=true;\r\n        \r\n        this.setState({\r\n            daten: workCopy,\r\n            aktiverStreifen: aktStr,\r\n        }); \r\n    }\r\n\r\n    handleSwitchButton(m, e){\r\n        /*m='+' für nächster oder '-' für voriger Streifen*/\r\n        const workCopy = this.state.daten;\r\n        \r\n        //console.log(\"Vor Switch\");\r\n        //console.log(workCopy);\r\n        if(m==='+'){\r\n            //console.log(\"Nächster Streifen: \"+((this.state.aktiverStreifen)+\"\\n\"))\r\n            m=(this.state.aktiverStreifen+1)%(workCopy.length);\r\n            console.log(\"Nächster Streifen (m): \"+m+\"\\n\");\r\n            \r\n            \r\n        }\r\n        else{\r\n            m=((this.state.aktiverStreifen+(workCopy.length-1))%(workCopy.length));\r\n            console.log(\"Nächster Streifen (m): \"+m+\"\\n\");\r\n        }\r\n        const rotID_target = this.state.daten[m].rotID;\r\n        \r\n        const rotCoeff = this.rotStrCoeff-rotID_target;\r\n        const zDifCoeff = (workCopy.length-1)-workCopy[m].z;\r\n        \r\n        var aktStr = this.state.aktiverStreifen;\r\n\r\n        for(let i=0; i<workCopy.length; i++){\r\n            //console.log(\"Daten: \" +workCopy[i].rotID+\"; \"+workCopy[i].z+\"; \"+workCopy[i].activo);\r\n            workCopy[i].rotID=(workCopy[i].rotID+rotCoeff)%this.rotStrCoeff;\r\n            workCopy[i].rotation=this.state.rotations_array[workCopy[i].rotID];\r\n            workCopy[i].z=(workCopy[i].z+zDifCoeff)%workCopy.length;\r\n            if(workCopy[i].z>workCopy[aktStr].z){aktStr=i;}\r\n            workCopy[i].activo = false;\r\n        }\r\n\r\n        //determine highest z-index\r\n        var currentz=0;\r\n        for(let j=0; j<workCopy.length;j++){\r\n            if(workCopy[j].z>workCopy[currentz].z){\r\n                currentz=j;\r\n            }\r\n        }\r\n        aktStr=currentz;\r\n        workCopy[aktStr].activo=true;\r\n        console.log(\"Nach Switch:\")\r\n        console.log(workCopy);\r\n        workCopy.forEach(element => {\r\n            console.log(element.id, element.z)\r\n        });\r\n        this.setState({\r\n            daten: workCopy,\r\n            aktiverStreifen: aktStr,\r\n        });\r\n        //console.log(\"Tatsächlich: \"+this.state.daten);\r\n        //console.log(\"Daten nach Switch\");\r\n        //console.log(this.state.daten);\r\n    }\r\n        \r\n    UNSAFE_componentWillMount = async() => {\r\n        try {\r\n            //alert(\"HEllo World\")\r\n            const serverResponse = await axios.get(this.serverAdress+\"/streifens\");\r\n            //alert(\"Hello World: \" + serverResponse.data);\r\n            var neueDaten= [];\r\n            var rotationen = [];\r\n            for (let x = 0; x<this.rotStrCoeff;x++){\r\n                rotationen.push((x*(360/this.rotStrCoeff))%360);\r\n            }\r\n            console.log('Länge des Rotationsarrays: '+rotationen.length);\r\n            for (let i = 0; i<serverResponse.data.length; i=i+1){\r\n                \r\n                neueDaten.push(\r\n                    {\r\n                        id: serverResponse.data[i].id,\r\n                        rotID: i%rotationen.length,\r\n                        tema: new Thema(\r\n                            serverResponse.data[i].Titel,\r\n                            null, //Image\r\n                            serverResponse.data[i].Beschreibung, \r\n                            serverResponse.data[i].Acordeon, \r\n                            serverResponse.data[i].Refs\r\n                            ),\r\n                        rotation: rotationen[(serverResponse.data[i].id-1)%rotationen.length],\r\n                        activo: (serverResponse.data[i].id-1)===0 ? true : false,\r\n                        //z: serverResponse.data.length-(serverResponse.data[i].id),\r\n                        z: serverResponse.data.length-i,\r\n                    }\r\n                );\r\n            }\r\n            console.log(neueDaten);\r\n            neueDaten.sort((a,b) => (a.id > b.id) ? 1 : -1);\r\n            for(let i = 0; i<neueDaten.length; i=i+1){\r\n                neueDaten[i].id=i;\r\n                neueDaten[i].z=neueDaten.length-neueDaten[i].id;\r\n            }\r\n            //console.log('Nach Sortierung');\r\n            //console.log(neueDaten);\r\n            this.setState({\r\n                rotations_array: rotationen, \r\n                daten: neueDaten,\r\n            });\r\n        } catch (error) {\r\n            this.setState({ error })\r\n            alert(\"Error:\\n\"+error)\r\n        }\r\n    }\r\n    \r\n    //NOCH NICHT LÖSCHEN!!! Falls Probleme mit UNSAFE_componentWillMount auftreten!\r\n    /*componentDidMount = async() => {\r\n        try {\r\n            const serverResponse = await axios.get(this.serverAdress+\"/streifens\");\r\n            //this.setState({data: response.data});\r\n            //alert(this.state.data[0].Titel);\r\n            //this.themaEins.title=response.data[0].Titel;\r\n            console.log(serverResponse);\r\n            this.setState({ data: {\r\n                themaEins: new Thema(serverResponse.data[0].Titel, null, serverResponse.data[0].Beschreibung, serverResponse.data[0].Acordeon),\r\n                themaZwei: new Thema(serverResponse.data[1].Titel, null, serverResponse.data[1].Beschreibung, serverResponse.data[1].Acordeon),\r\n                themaDrei: new Thema(serverResponse.data[2].Titel, null, serverResponse.data[2].Beschreibung, serverResponse.data[2].Acordeon),\r\n                themaVier: new Thema(serverResponse.data[3].Titel, null, serverResponse.data[3].Beschreibung, serverResponse.data[3].Acordeon),\r\n                themaFuenf: new Thema(serverResponse.data[4].Titel, null, serverResponse.data[4].Beschreibung, serverResponse.data[4].Acordeon),\r\n                themaSechs: new Thema(serverResponse.data[5].Titel, null, serverResponse.data[5].Beschreibung, serverResponse.data[5].Acordeon),\r\n                themaSieben: new Thema(serverResponse.data[6].Titel, null, serverResponse.data[6].Beschreibung, serverResponse.data[6].Acordeon),\r\n                themaAcht: new Thema(serverResponse.data[7].Titel, null, serverResponse.data[7].Beschreibung, serverResponse.data[7].Acordeon),\r\n                themaNeun: new Thema(serverResponse.data[8].Titel, null, serverResponse.data[8].Beschreibung, serverResponse.data[8].Acordeon),\r\n                themaZehn: new Thema(serverResponse.data[9].Titel, null, serverResponse.data[9].Beschreibung, serverResponse.data[9].Acordeon),\r\n            } });\r\n            console.log('Nach componentDidMount:' + this.state.data.themaEins);\r\n        } catch (error) {\r\n            this.setState({ error })\r\n            alert(\"Error:\\n\"+error)\r\n        }\r\n        \r\n    }*/\r\n    \r\n    makeTitels() {\r\n        var nameArray = [];\r\n        for (let n = 0; n<this.state.daten.length;n++){\r\n            nameArray.push({\r\n                ID: n,\r\n                Titel: this.state.daten[n].tema.title},\r\n                );\r\n        }\r\n        return nameArray;\r\n    }\r\n\r\n    handleLinkClick = () => {\r\n        window.open(this.props.impressum);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Oberflaeche'>\r\n                <motion.div\r\n                    animate = {{\r\n                        zIndex: 108,\r\n                    }}\r\n                    className=\"Nav\"\r\n                    >\r\n                    <NavDrawer\r\n                        buttonNamen = {this.makeTitels()}\r\n                        action = {(m, e) => this.clickHandler(m, e)}\r\n                        impressumlink = {this.props.impressum}\r\n                        version = {this.props.version}\r\n                    />\r\n                </motion.div>                    \r\n                \r\n                    <motion.div className = 'Kompass'>\r\n                        {this.state.daten.map(data =>\r\n                            <motion.div \r\n                                animate={{\r\n                                    rotate: data.rotation,\r\n                                    zIndex: data.z,\r\n                                    originX: this.globalOriginX,\r\n                                    originY: this.globalOriginY,\r\n                                }}\r\n                                className= {data.activo ? 'Kompassstreifen_Active' : 'Kompassstreifen_Hidden'}//evtl als Streifenklasse verwenden\r\n                            >\r\n                                <Streifen\r\n                                    id = {data.id}\r\n                                    thema={data.tema}\r\n                                    active={data.activo}\r\n                                    action = {(m, e) => this.handleSwitchButton(m, e)}\r\n                                    navigation = {(m, e) => this.clickHandler(m, e)}                            \r\n                                />   \r\n                            </motion.div>\r\n                        )} \r\n                    </motion.div>   \r\n                \r\n                <footer>\r\n                    <motion.div>\r\n                        <Button\r\n                            variant='contained' \r\n                            color='secondary'\r\n                            onClick={(e)=>this.handleLinkClick()}\r\n                        > \r\n                            Kontakt \r\n                        </Button>\r\n                    </motion.div>\r\n                </footer>        \r\n           </div>\r\n        );\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Box from '@mui/material/Box';\r\n\r\n//import './index.css';\r\nimport './style.css';\r\n\r\nimport Kompass from './Kompass';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//ANPASSUNG\r\n/*Hier die Adressen des Backends sowie des Impressums bzw. der Kontaktwebseite eintragen*/\r\n\r\nconst backendAdress=\"https://digikom-backend.herokuapp.com\";\r\nconst impressumAdress = \"https://omen.cs.uni-magdeburg.de/itiamsl/deutsch/home/index.html\";\r\nconst version = \"b0.9.1\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <Kompass server= {backendAdress} impressum={impressumAdress} version={version}/>\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}